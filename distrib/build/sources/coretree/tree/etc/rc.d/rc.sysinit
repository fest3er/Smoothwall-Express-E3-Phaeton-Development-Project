#!/bin/sh

# Re-run udevd
/sbin/udevd --daemon
/sbin/udevadm trigger
/sbin/udevadm settle
/sbin/udevadm trigger --subsystem-match=block
/sbin/udevadm trigger --attr-match=modalias
/sbin/udevadm settle

. /var/smoothwall/main/settings

export STARTSTOP="startup"

umask 022

echo "Setting hostname"
hostname $HOSTNAME

if [ "$KEYMAP" != "" ]; then
	loadkeys $KEYMAP
fi

PATH=/bin:/sbin:/usr/bin:/usr/sbin
export PATH

if [ -e /forcefsck ]; then FORCE=-f; fi

echo -n "Checking root filesystem: "

/sbin/fsck $FORCE -R -T -a -C /
RC=$?  

if [ "$RC" = "0" ]; then
	echo "Success"
elif [ "$RC" = "1" ]; then
	echo "Passed"
fi

# A return of 2 or higher means there were serious problems.
if [ $RC -gt 1 ]; then
	echo "  $STRING: Failed"
	echo "  *** An error occurred during the file system check."
	echo "  *** Dropping you to a shell; the system will reboot"
	echo "  *** when you leave the shell."
	export PS1="(Repair filesystem) \# # "
	sulogin
	echo "Unmounting filesystems"
	umount -a
	mount -n -o remount,ro /
	echo "Automatic reboot in progress."
	reboot -f
fi

echo "Mounting root read/write"
mount -n -o remount,rw /
echo "Clearing and refilling mtab"
>/etc/mtab
mount -f /
mount -f /proc
mount -f /sys
mount -f /dev
mount -f /dev/pts


echo -n "Checking other filesystems: "
/sbin/fsck $FORCE -R -T -a -C -A
RC=$?  

if [ "$RC" = "0" ]; then
        echo "Success"
elif [ "$RC" = "1" ]; then
        echo "Passed"
fi
  
# A return of 2 or higher means there were serious problems.
if [ $RC -gt 1 ]; then
        echo "  $STRING: Failed"
        echo "  *** An error occurred during the file system check."
  	echo "  *** Dropping you to a shell; the system will reboot"
  	echo "  *** when you leave the shell."
  	export PS1="(Repair filesystem) \# # "
  	sulogin
  	echo "Unmounting filesystems"
  	umount -a
  	mount -n -o remount,ro /
	echo "Automatic reboot in progress."
  	reboot -f
fi

echo "Mounting other filesystems"
mount -a

echo "Directing core dumps to /var/log"
mkdir -p /var/log/coredumps
chmod 700 /var/log/coredumps
echo "/var/log/coredumps/%e-%t-%s.%p" >/proc/sys/kernel/core_pattern
echo "Turning on swap"
/sbin/swapon -a

echo "Module dependencies"
/sbin/depmod -a

echo "Clearing old files"
chmod 660 /dev/ttyS*
chmod 660 /dev/ttyI* >/dev/null 2>&1
chmod 1777 /tmp
find /var/run -name '*.pid' -type f -exec rm -f '{}' \;
rm -f /var/smoothwall/red/*
rm -f /var/lock/LCK..ttyS*
rm -f /var/run/pppd*.tdb

echo "Starting klogd"
/usr/sbin/klogd

if readlink /dev/harddisk | egrep "hd."; then
  echo "Setting IDE drive params"
  /sbin/hdparm -d 1 -c 1 -u 1 /dev/harddisk
fi

echo "Setting the clock"
/sbin/hwclock --hctosys

#if [ ! -e /usr/etc/ssh_host_key ]; then
#	echo "Generating SSH RSA1 key.  This may take several minutes."
#	/usr/bin/ssh-keygen -t rsa1 -f /usr/etc/ssh_host_key -N ""
#fi
echo "Generating keys/certs..."
if [ ! -e /usr/etc/ssh_host_rsa_key ]; then
	echo "  SSH RSA key.  This may take several minutes."
	/usr/bin/ssh-keygen -t rsa -f /usr/etc/ssh_host_rsa_key -N ""
fi
if [ ! -e /usr/etc/ssh_host_dsa_key ]; then
	echo "  SSH DSA key.  This may take several minutes."
	/usr/bin/ssh-keygen -t dsa -f /usr/etc/ssh_host_dsa_key -N "" 
fi
if [ ! -e /usr/etc/ssh_host_ecdsa_key ]; then
	echo "  SSH ECDSA key.  This may take several minutes."
	/usr/bin/ssh-keygen -t ecdsa -f /usr/etc/ssh_host_ecdsa_key -N "" 
fi

if [ ! -e /etc/httpd/server.key ]; then
	echo "  https server key."
	/usr/ssl/bin/openssl genrsa -rand \
		/boot/vmlinuz-`uname -r`:/var/smoothwall/ethernet/settings:/var/log/dmesg -out \
		/etc/httpd/server.key 1024
	echo "  CSR"
	cat /etc/certparams | /usr/ssl/bin/openssl \
		req -new -key /etc/httpd/server.key -out /etc/httpd/server.csr
	echo "  Signing certificate"
	/usr/ssl/bin/openssl x509 -req -days 999999 -in \
		/etc/httpd/server.csr -signkey /etc/httpd/server.key -out \
		/etc/httpd/server.crt
fi	

echo "Hashing CA certs"
/usr/ssl/bin/c_rehash >/dev/null

echo "Generating UPNP UUID"
/usr/bin/uuidgen >/etc/miniupnpd.uuid

echo "Starting syslogd"
/usr/sbin/syslogd -m 0

echo "Loading filesystems"
/sbin/modprobe msdos
/sbin/modprobe vfat
/sbin/modprobe nls_cp437

echo "Loading IPSEC"
/sbin/modprobe ipsec

echo "Starting smoothd"
/usr/sbin/smoothd

echo "Rotating logs"
/usr/sbin/logrotate /etc/logrotate.conf

echo
echo "Initializing  networking"
. /etc/rc.d/rc.network

echo
echo "Starting services and daemons"
echo "  cron"
rm -f /var/run/crond.reboot
/usr/sbin/cron
echo "  httpd"
#/usr/apache2/sbin/httpd -DSSL -DDEFLATE
/usr/apache2/sbin/httpd -DSSL
echo "  sshd (if enabled)"
/usr/bin/smoothcom sshdrestart
echo "  time service (if enabled)"
/usr/bin/smoothcom ntpdrestart
echo "  squid (if enabled)"
/usr/bin/smoothcom squidrestart
echo "  IMSpector (if enabled)"
/usr/bin/smoothcom imrestart
echo "  SIP proxy (if enabled)"
/usr/bin/smoothcom siprestart
echo "  Clam Anti-Virus (if enabled)"
/usr/bin/smoothcom clamavrestart
echo "  POP3 scanner (if enabled)"
/usr/bin/smoothcom p3scanrestart

echo
echo "Finishing startup"
echo "  Silencing kernel, syslog output on tty12"
echo "    View the log files in /var/log to trace errors."
echo "1 4 1 7" >/proc/sys/kernel/printk

# Remove the policing barricades (delete the ingress qdiscs)
. /etc/rc.d/inc.open-ingress
# Restart TC in case it uses ingress policers
/usr/bin/smoothcom trafficrestart
# Up the links!
. /etc/rc.d/inc.links-up

# Services here depend on the IFs being up.
echo "  dhcpd (if enabled)"
/usr/bin/smoothcom dhcpdrestart

# Final startup steps.
echo "  Saving dmesg buffer to /var/log/dmesg"
dmesg >/var/log/dmesg

logger -t smoothwall "SmoothWall started."

/usr/bin/sounds/startupsound

unset STARTSTOP

# Start a 'daemon' that waits for the power button to be pressed
(
  while read a b c d; do
    if [ "$a" == "button/power" ]; then
      shutdown -h -P -t 2 now \"Power button pressed\"
      exit
    fi
  done </proc/acpi/event
)&
