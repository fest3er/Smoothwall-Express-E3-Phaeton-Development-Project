#! /bin/bash

case `basename $0` in
  make_flash)
    # Won't work as a mere mortal
    if [ $UID -ne 0 ]; then
      echo "This script MUST be run as root. Please su or sudo and try again!"
      echo
      exit 1
    fi
    ;;
esac

export ORIG_DIR=${PWD}
#export MTOOLS_SKIP_CHECK=1

# Function to unmount and clean up
function cleanup {
  cd $ORIG_DIR
  umount ./$1
  rmdir $1
  umount ./$2
  rmdir $2
}

function countdown {
  typeset -i i
  i=$1
  while [ $i -gt 0 ]; do
    echo -en "\033[0K$i\r"
    i=i-1
    sleep 1
  done
  echo
}

# Stuff you need to know
echo
echo "                 PHAETON/ROADSTER ISO TO FLASH CONVERTER"
echo
echo "$0 is a script that copies a Phaeton/Roadster install ISO image"
echo "to a flash/thumb drive such that it can be booted. There are a few items"
echo "to be aware of."
echo "  1. The flash device must have at least one partition. The first"
echo "     partition will be used and must be formatted with FAT-16 or"
echo "     FAT-32. Prepare it now if necessary."
echo "  2. You will be prompted to plug in a USB thumb/flash drive."

case `basename $0` in
  make_flash)
    echo "  3. You will be prompted to enter an ISO pathname. The script will"
    echo "     list those it finds in the 'usual' places; you can copy/paste"
    echo "     the desired pathname."
    echo "  4. You will be prompted to select the baud rate for the console. The"
    echo "     default is 115200; 19200 and 9600 are available."
    echo
    echo -n "Enter 'yes' to continue or press <ENTER> to skip this step: "
    read ans </dev/tty
    if [ "$ans" != "yes" ]; then exit 0; fi
    ;;
  *)
    echo "  3. You will be prompted to select the baud rate for the console. The"
    echo "     default is 115200; 19200 and 9600 are available."
    echo
    ;;
esac

# Pause for reflection
#sleep 3

# Get the needed info
echo
echo

echo "Plug in flash drive"

# Wait until a new [0-9] node appears in /dev
#   This should be OK because there should be few device changes during operation
DEV_FILE="/tmp/inotify_devs"
INOTIFY_CMD="inotifywait -q"
WATCH="CREATE"

# Watch for CREATEs in /dev of xxx[0-9]*
$INOTIFY_CMD -m --exclude "t[my]" /dev | while read a b c; do
  if [ "$b" != "$WATCH" ]; then continue; fi
  C="${c/[0-9]*/}"
  if [ "$c" != "$C" -a -e "$a$C" -a -e "$a${C}1" ]; then
    echo "${C}" > ${DEV_FILE}
    exit  # This exits the 'while read' subprocess
  fi
done
read fldev <$DEV_FILE
rm -f $DEV_FILE

case `basename $0` in
  make_flash)
    echo -e "\nAvailable ISO(s)"
    ls -C1 target/isos/*.iso 2>/dev/null | sed -e 's/^/    /'
    ls -C1 *.iso 2>/dev/null | sed -e 's/^/    /'

    MOUNT_OPT="-o loop,ro "
    echo -n "   Enter the ISO filename: "
    read isoname
    if [ ! -f "$isoname" ]; then
      echo "ISO image '$isoname' does not exist. Try again."
      exit 1
    fi
    ;;
  auto_flash)
    if [ -e /dev/sr0 -o -e /dev/cdrom ]; then
      MOUNT_OPT="-o ro "
      if [ -e /dev/sr0 ]; then isoname=/dev/sr0; fi
      if [ -e /dev/cdrom ]; then isoname=/dev/cdrom; fi
    else
      echo "ERROR: optical drive not found! (Changing to runlevel 1)"
      init 1
      exit
    fi
    ;;
esac

# Serial port baud rate
echo
echo "Select serial port baud rate for GRUB"
while [ 1 -eq 1 ]; do
  # Choose baud rate
  i=1; echo "  $i. 115200 (default)"
  i=2; echo "  $i. 19200"
  i=3; echo "  $i. 9600"
  echo

  echo -n "[1]        Selection: "
  read serialbaud #</dev/tty
  if [ x$serialbaud == x ]; then serialbaud="1"; fi
  if [ $serialbaud -lt 4 ]; then break; fi
done
case $serialbaud in
  1) BAUD=115200;;
  2) BAUD=19200;;
  3) BAUD=9600;;
esac

# Shorthand
CD="isomnt${RANDOM}"
FL="flmnt${RANDOM}"

# Be sure the ISO and flash are unmounted and the mount point deleted
#   if the script abends.
case `basename $0` in
  make_flash)
    trap "cleanup $CD $FL; exit" EXIT SIGINT SIGQUIT
    if [ `basename ${PWD}` == 'build' ]; then
      # Assume 'make media' and use the buildroot grub
      GRUB="${ORIG_DIR}/.."
    else
      # Assume on booted Roadster, use the natural grub
      GRUB=""
    fi
    ;;
  auto_flash)
    trap "cleanup $CD $FL; echo \"(Changing to runlevel 1)\"; init 1; exit" EXIT SIGINT SIGQUIT
    # Assume on booted Roadster, use the natural grub
    GRUB=""
    ;;
esac

echo
echo "Preparing..."

# Set partition 1's 'bootable' flag
parted /dev/${fldev} set 1 boot on >/dev/null 2>&1

# Make the mount points
mkdir -p $CD || \
    { echo "Couldn't make '$CD' ISO mount point!"; exit 1; }
mkdir -p $FL || \
    { echo "Couldn't make '$FL' flash mount point!"; exit 1; }

# Be sure loop device is available
/sbin/modprobe loop || \
    { echo "Couldn't modprobe loop device!"; exit 1; }

# Mount the ISO and flash
mount -t iso9660 ${isoname} $CD ${MOUNT_OPT} || \
    { echo "Couldn't mount the CD or ISO image!"; exit 1; }
mount -t vfat /dev/${fldev}1 $FL || \
    { echo "Couldn't mount flash partition #1!"; exit 1; }

echo
echo "Copying..."

# Copy the ISO contents to flash
cp -ar $CD/* $FL

echo
echo "Wrenching..."

# Stuff needed for grub
PRT=`echo "find /smoothwall.tgz" | ${ORIG_DIR}/../usr/sbin/grub --batch 2>&- | egrep "\([^ ]*\)"`
DRV=`echo $PRT | sed -e 's/,[0-9]*//'`
sed -i -e "s/(cd)/(hd0,0)/" -e 's/115200/'$BAUD'/' ${FL}/boot/grub/grub.conf
echo -e "root ${PRT}\nsetup ${DRV}" | ${ORIG_DIR}/../usr/sbin/grub --batch

echo
echo "Finishing..."

# Unmount them
cleanup $CD $FL

# Clear the exit booby trap
trap "" EXIT

echo
echo "iso2flash complete."

case `basename $0` in
  make_flash)
    exit;
    ;;
  auto_flash)
    echo "Changing to runlevel 1"; init 1; exit
    ;;
esac
